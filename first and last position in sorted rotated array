 int firstOcc(vector<int> nums, int key){
        int n = nums.size()-1;
        int s = 0;
        int e = n;
        int ans = -1;
        int mid = s + (e-s)/2;
        while(s<=e){   
            if(nums[mid]==key){
                ans = mid;
                e = mid-1;
        }       
             else if(key>nums[mid] ){
                 s = mid + 1;
             }   
            else {
                e = mid -1;
            }
        mid = s + (e-s)/2;
        }
    return ans;
    }
    int lastOcc(vector<int> nums, int key){
        int n = nums.size()-1;
        int s = 0;
        int e = n;
        int ans = -1;
        int mid = s + (e-s)/2;
        while(s<=e){    
            if(nums[mid]==key){
                ans = mid;
                s = mid + 1;
            }
            
             else if(key>nums[mid]){
                 s = mid + 1;
             }   
            else {
                e = mid -1;
            }
        mid = s + (e-s)/2;
        }
    return ans;
    }   
    vector<int> searchRange(vector<int>& nums, int target) {
        int first = firstOcc(nums, target);
        int last = lastOcc(nums, target);
         vector<int>ans;
    
          ans.push_back(first);
          ans.push_back(last);
     return ans;
    }
