  //minimum speed to eat all bananas within h hours.
  bool isPossible(vector<int>& piles, int h, int mid){
      long long count = 0;
      for(int i =0; i<piles.size(); i++){
         count+= ceil((piles[i]*1.0)/mid);    //time = distance / speed
      }
    if(count<=h)return 1;
    else return 0;
}
    int minEatingSpeed(vector<int>& piles, int h) {
    int n = piles.size() - 1; 
    int start = 1;//minimum speed    
    int end=*max_element(piles.begin(),piles.end());
    int ans = -1;
    while(start<=end){
        int mid = start + (end-start) / 2;//mid speed
        if(isPossible(piles, h, mid)){ // is it possible to eat bananas within h time with speed of mid.
            ans = mid;
            end = mid -1;
        }    
        else{
            start = mid + 1;
        }
    }
    return ans;
    }
