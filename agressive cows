bool isPossible(vector<int>&stalls, int n, int k, int mid){
    int cowscnt = 1;
    int lastpos = stalls[0];
    for(int i= 0; i<n; i++){
        if(stalls[i] - lastpos >= mid){
            cowscnt++;
            if(cowscnt == k)return true;
            lastpos = stalls[i];
        }
    }
    return false;
}
    int solve(int n, int k, vector<int> &stalls) {
    sort(stalls.begin(), stalls.end());
    
    int maxi = stalls[n-1] - stalls[0];
    //search<---------------------->space;
    int s =0, e= maxi;
    int ans = 0;
    while(s<=e){
          int mid = s + (e-s)/2;
        if(isPossible(stalls, n, k, mid)){
          ans = mid;    
         s = mid + 1;
        }
        else{
            e = mid-1;
        }
    }
    return ans;
    }
